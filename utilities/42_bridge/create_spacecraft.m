%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Copyright 2019 by California Institute of Technology.  ALL RIGHTS RESERVED. %
% United  States  Government  sponsorship  acknowledged.   Any commercial use %
% must   be  negotiated  with  the  Office  of  Technology  Transfer  at  the %
% California Institute of Technology.                                         %
%                                                                             %
% This software may be subject to  U.S. export control laws  and regulations. %
% By accepting this document,  the user agrees to comply  with all applicable %
% U.S. export laws and regulations.  User  has the responsibility  to  obtain %
% export  licenses,  or  other  export  authority  as may be required  before %
% exporting  such  information  to  foreign  countries or providing access to %
% foreign persons.                                                            %
%                                                                             %
% This  software  is a copy  and  may not be current.  The latest  version is %
% maintained by and may be obtained from the Mobility  and  Robotics  Sytstem %
% Section (347) at the Jet  Propulsion  Laboratory.   Suggestions and patches %
% are welcome and should be sent to the software's maintainer.                %
%                                                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function [] = create_spacecraft(Swarm, Small_body_model, output_folder)
%CREATE_SPACECRAFT Creates files Orb_SC_X.txt and SC_X for 42 simulation
% from a Swarm object
% Syntax: [] = create_spacecraft(Swarm, Small_body_model, output_folder)
% The function creates files Orb_SC_X.txt and SC_X describing the orbits of
% each spacecraft in the Swarm. The files are placed in output_folder.

if nargin<3
    output_folder='Eros';
end

[mkdir_success, mkdir_warn] = mkdir(output_folder);
for orbit_ix = 0:Swarm.get_num_spacecraft()-1

    radius_and_velocity = Swarm.abs_trajectory_array(1,:,orbit_ix+1);
    radius_m = radius_and_velocity(1:3);
    velocity_ms = radius_and_velocity(4:6);
    
    gm_m3sm2 = Small_body_model.BodyModel.gravity.gm*1e9;
    
    [a,e,i_anomaly,Omega,omega,theta]=rv2op(radius_m,velocity_ms,gm_m3sm2);
    
    
    periapsis_altitude_km = a*(1-e)*1e-3;
    apoapsis_altitude_km = a*(1+e)*1e-3;
    inclination_deg = i_anomaly*180/pi;
    raan_deg = Omega*180/pi;
    argument_periapsis_deg = omega*180/pi;
    true_anomaly_deg = theta*180/pi;
    
    orbit_header_str = [ ...
    "<<<<<<<<<<<<<<<<<  42: Orbit Description File   >>>>>>>>>>>>>>>>>", ...
    "Orbit around Eros             !  Description", ...
    "CENTRAL                       !  Orbit Type (ZERO, FLIGHT, CENTRAL, THREE_BODY)", ...
    "::::::::::::::  Use these lines if ZERO           :::::::::::::::::", ...
    "MINORBODY_2                   !  World", ...
    "FALSE                         ! Use Polyhedron Gravity", ...
    "::::::::::::::  Use these lines if FLIGHT   :::::::::::::::::", ...
    "0                             !  Region Number", ...
    "FALSE                         ! Use Polyhedron Gravity", ...
    ];

    orbit_str = [ ...
      "::::::::::::::  Use these lines if Body-Centered Orbit  :::::::::::::::::", ...
    "MINORBODY_1                   !  Orbit Center", ...
    "FALSE                         !  Secular Orbit Drift Due to J2", ...
    "KEP                           !  Use Keplerian elements (KEP) or (RV) or FILE", ...
    "PA                            !  Use Peri/Apoapsis (PA) or min alt/ecc (AE)", ...
    sprintf("%.1f  %.1f                    !  Periapsis & Apoapsis Altitude, km", periapsis_altitude_km, apoapsis_altitude_km), ...
    "0.0  0.0                    !  Min Altitude (km), Eccentricity", ...
    sprintf("%.1f                          !  Inclination (deg)", inclination_deg), ...
    sprintf("%.1f                         !  Right Ascension of Ascending Node (deg)",raan_deg), ...
    sprintf("%.1f                          !  Argument of Periapsis (deg)",argument_periapsis_deg), ...
    sprintf("%.1f                         !  True Anomaly (deg)",true_anomaly_deg), ...
    "0.0  0.0  0.0                 !  RV Initial Position (km)", ...
    "0.0  0.0  0.0                 !  RV Initial Velocity (km/sec)", ...
    "TRV  ""ORB_ID""                 !  TLE or TRV format, Label to find in file", ... % Note that this is not actually read and does not matter.
    """TRV.txt""                     !  File name", ...  
    ];

    % None of the footer is used, since we specify a CENTER orbit.
    orbit_footer_str = [... 
    ":::::::::::::  Use these lines if Three-Body Orbit  ::::::::::::::::", ...
    "SUNEARTH                      !  Lagrange system", ...
    "LAGDOF_MODES                  !  Propagate using LAGDOF_MODES or LAGDOF_COWELL or LAGDOF_SPLINE", ...
    "MODES                         !  Initialize with MODES or XYZ or FILE", ...
    "L2                            !  Libration point (L1, L2, L3, L4, L5)", ...
    "800000.0                      !  XY Semi-major axis, km", ...
    "45.0                          !  Initial XY Phase, deg", ...
    "CW                            !  Sense (CW, CCW), viewed from +Z", ...
    "0.0                           !  Second XY Mode Semi-major Axis, km (L4, L5 only)", ...
    "0.0                           !  Second XY Mode Initial Phase, deg (L4, L5 only)", ...
    "CW                            !  Sense (CW, CCW), viewed from +Z (L4, L5 only)", ...
    "400000.0                      !  Z Semi-axis, km", ...
    "60.0                          !  Initial Z Phase, deg", ...
    "1.05  0.5  0.0                !  Initial X, Y, Z (Non-dimensional)", ...
    "0.0   0.0  0.0                !  Initial Xdot, Ydot, Zdot (Non-dimensional)", ...
    "TRV  ""ORB_ID""                 !  TLE, TRV or SPLINE format, Label to find in file", ...
    """TRV.txt""                     !  File name", ...
    "******************* Formation Frame Parameters ************************", ...
    "N                             !  Formation Frame Fixed in [NL]", ...
    "0.0  0.0  0.0  123            !  Euler Angles (deg) and Sequence", ...
    "N                             !  Formation Origin expressed in [NL]", ...
    "0.0  0.0  0.0                 !  Formation Origin wrt Ref Orbit (m)", ...
    ];

    inp_sim_file = fopen(fullfile(output_folder,sprintf("Orb_SC_%d.txt",orbit_ix)),'w');
    for line = orbit_header_str
        fprintf(inp_sim_file, "%s\n", line );
    end
    for line = orbit_str
        fprintf(inp_sim_file, "%s\n", line );
    end
    for line = orbit_footer_str
        fprintf(inp_sim_file, "%s\n", line );
    end
    fclose(inp_sim_file);

end