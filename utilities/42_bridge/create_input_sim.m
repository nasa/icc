%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Copyright 2019 by California Institute of Technology.  ALL RIGHTS RESERVED. %
% United  States  Government  sponsorship  acknowledged.   Any commercial use %
% must   be  negotiated  with  the  Office  of  Technology  Transfer  at  the %
% California Institute of Technology.                                         %
%                                                                             %
% This software may be subject to  U.S. export control laws  and regulations. %
% By accepting this document,  the user agrees to comply  with all applicable %
% U.S. export laws and regulations.  User  has the responsibility  to  obtain %
% export  licenses,  or  other  export  authority  as may be required  before %
% exporting  such  information  to  foreign  countries or providing access to %
% foreign persons.                                                            %
%                                                                             %
% This  software  is a copy  and  may not be current.  The latest  version is %
% maintained by and may be obtained from the Mobility  and  Robotics  Sytstem %
% Section (347) at the Jet  Propulsion  Laboratory.   Suggestions and patches %
% are welcome and should be sent to the software's maintainer.                %
%                                                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function [] = create_input_sim(Swarm, output_folder, time_step, graphics_front_end)
%CREATE_INPUT_SIM Creates file Inp_Sim.txt for 42 simulation from a Swarm
% Syntax: [] = create_input_sim(Swarm, output_folder, time_step, graphics_front_end)
% The function creates a file Inp_Sim.txt describing the simulation
% environment. The file is placed in the folder output_folder.

if nargin<4
    graphics_front_end="TRUE";
end

if nargin<3
    time_step=0.1;
end

if nargin<2
    output_folder='Eros';
end

sim_duration = max(Swarm.sample_times)-min(Swarm.sample_times);

sim_control_string = ["<<<<<<<<<<<<<<<<<  42: The Mostly Harmless Simulator  >>>>>>>>>>>>>>>>>", ...
"************************** Simulation Control **************************", ...
"FAST                            !  Time Mode (FAST, REAL, or EXTERNAL)", ...
sprintf("%.1f      %.1f                !  Sim Duration, Step Size [sec]",sim_duration, time_step), ...
"10.0                            !  File Output Interval [sec]", ...
sprintf("%s                           !  Graphics Front End?",graphics_front_end), ...
"Inp_Cmd.txt                     !  Command Script File Name", ...
];

ref_orbits_string = ["**************************  Reference Orbits  **************************", ...
sprintf("%d                               !  Number of Reference Orbits",Swarm.get_num_spacecraft()), ...
];
for orbit = 0:Swarm.get_num_spacecraft()-1
    ref_orbits_string  = [ref_orbits_string, ...
sprintf("TRUE   Orb_SC_%d.txt              !  Input file name for Orb %d",orbit,orbit), ...
];
end

spacecraft_string = [...
    "*****************************  Spacecraft  *****************************", ...
    sprintf("%d                              !  Number of Spacecraft",Swarm.get_num_spacecraft()), ...
    ];
for orbit = 0:Swarm.get_num_spacecraft()-1
    spacecraft_string  = [spacecraft_string , ...
    sprintf("TRUE  %d %s       !  Existence, RefOrb, Input file for SC %d", orbit, sprintf("SC_%d.txt",orbit), orbit), ...
    ];
end

environment_string = ["***************************** Environment  *****************************", ...
"09 29 2016                      !  Date (Month, Day, Year)", ...
"10 16 00.00                     !  Greenwich Mean Time (Hr,Min,Sec)", ...
"0.0                             !  Time Offset (sec)", ...
"USER_DEFINED                    !  Model Date Interpolation for Solar Flux and AP values?(TWOSIGMA_KP, NOMINAL or USER_DEFINED)", ...
"230.0                           !  If USER_DEFINED, enter desired F10.7 value", ...
"100.0                           !  If USER_DEFINED, enter desired AP value", ...
"IGRF                            !  Magfield (NONE,DIPOLE,IGRF)", ...
"8   8                           !  IGRF Degree and Order (<=10)", ...
"2   0                           !  Earth Gravity Model N and M (<=18)", ...
"2   0                           !  Mars Gravity Model N and M (<=18)", ...
"2   0                           !  Luna Gravity Model N and M (<=18)", ...
"FALSE   FALSE                   !  Aerodynamic Forces & Torques (Shadows)", ...
"FALSE                           !  Gravity Gradient Torques", ...
"FALSE   FALSE                   !  Solar Pressure Forces & Torques (Shadows)", ...
"FALSE                           !  Gravity Perturbation Forces", ...
"FALSE                           !  Passive Joint Torques", ...
"FALSE                           !  Thruster Plume Forces & Torques", ...
"FALSE                           !  RWA Imbalance Forces and Torques", ...
"FALSE                           !  Contact Forces and Torques", ...
"FALSE                           !  CFD Slosh Forces and Torques", ...
"FALSE                           !  Output Environmental Torques to Files", ...
    ];

celestial_bodies_string = ["********************* Celestial Bodies of Interest *********************", ...
"MEAN                            !  Ephem Option (MEAN or DE430)", ...
"TRUE                            !  Mercury", ...
"TRUE                            !  Venus", ...
"TRUE                            !  Earth and Luna", ...
"TRUE                            !  Mars and its moons", ...
"TRUE                            !  Jupiter and its moons", ...
"TRUE                            !  Saturn and its moons", ...
"TRUE                            !  Uranus and its moons", ...
"TRUE                            !  Neptune and its moons", ...
"TRUE                            !  Pluto and its moons", ...
"TRUE                            !  Asteroids and Comets", ...
"***************** Lagrange Point Systems of Interest ******************", ...
"TRUE                            !  Earth-Moon", ...
"TRUE                            !  Sun-Earth", ...
"FALSE                           !  Sun-Jupiter", ...
    ];

ground_stations_string = ["************************* Ground Stations ***************************", ...
"5                                            ! Number of Ground Stations", ...
"TRUE  EARTH  -77.0  37.0  ""GSFC""             ! Exists, World, Lng, Lat, Label", ...
"TRUE  EARTH  -155.6 19.0  ""South Point""      ! Exists, World, Lng, Lat, Label", ...
"TRUE  EARTH  115.4 -29.0  ""Dongara""          ! Exists, World, Lng, Lat, Label", ...
"TRUE  EARTH  -71.0 -33.0  ""Santiago""         ! Exists, World, Lng, Lat, Label", ...
"TRUE  LUNA   45.0  45.0   ""Moon Base Alpha""  ! Exists, World, Lng, Lat, Label", ...
];


[mkdir_success, mkdir_warn] = mkdir(output_folder);
inp_sim_file = fopen(fullfile(output_folder,'Inp_Sim.txt'),'w');
for line = sim_control_string
    fprintf(inp_sim_file, "%s\n", line );
end
for line = ref_orbits_string
    fprintf(inp_sim_file, "%s\n", line );
end
for line = spacecraft_string
    fprintf(inp_sim_file, "%s\n", line );
end
for line = environment_string
    fprintf(inp_sim_file, "%s\n", line );
end
for line = celestial_bodies_string
    fprintf(inp_sim_file, "%s\n", line );
end
for line = ground_stations_string
    fprintf(inp_sim_file, "%s\n", line );
end
fclose(inp_sim_file);
