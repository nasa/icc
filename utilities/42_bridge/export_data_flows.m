%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Copyright 2019 by California Institute of Technology.  ALL RIGHTS RESERVED. %
% United  States  Government  sponsorship  acknowledged.   Any commercial use %
% must   be  negotiated  with  the  Office  of  Technology  Transfer  at  the %
% California Institute of Technology.                                         %
%                                                                             %
% This software may be subject to  U.S. export control laws  and regulations. %
% By accepting this document,  the user agrees to comply  with all applicable %
% U.S. export laws and regulations.  User  has the responsibility  to  obtain %
% export  licenses,  or  other  export  authority  as may be required  before %
% exporting  such  information  to  foreign  countries or providing access to %
% foreign persons.                                                            %
%                                                                             %
% This  software  is a copy  and  may not be current.  The latest  version is %
% maintained by and may be obtained from the Mobility  and  Robotics  Sytstem %
% Section (347) at the Jet  Propulsion  Laboratory.   Suggestions and patches %
% are welcome and should be sent to the software's maintainer.                %
%                                                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function [] = export_data_flows(Swarm, output_file)
%
% Exports a CSV file with three columns.
% The first column is the time step, in seconds since the start of the
% simulation.
% The second column is the spacecraft ID.
% The third column is the amount of data generated by the spacecraft during
% that timestep, in bits/second.

if nargin<2
    output_file = "data_flows.csv";
end

N = Swarm.get_num_spacecraft();
K = Swarm.get_num_timesteps();

data_acquisition = zeros(N*K,3);
for t=1:K
    for sc = 1:N
        data_acquisition(N*(t-1)+sc, :) = [t, sc, Swarm.Communication.effective_source_flow(sc, t)];
    end
end

data_acquisition_header = {"Time", "Spacecraft", "Data Collected"};

data_acquisition_tab = [ data_acquisition_header; num2cell(data_acquisition)];

writecell(data_acquisition_tab, output_file);